openapi: "3.0.0"
info:
  title: OfficeDoc Groups APIs
  version: v0.1
tags:
  - name: Group
  - name: GroupFolder
  - name: GroupMember

paths:
  /groups:
    post:
      tags:
        - Group
      summary: create a group
      requestBody:
        $ref: '#/components/requestBodies/group'
      responses:
        '201':
          description: group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
  /groups/{groupId}:
    get:
      tags:
        - Group
      summary: get a group
      description: every time a user access a group, permission will be checked and the user will become a group member if he has not been yet.
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
        '404':
          description: NotFound
  /groups/{groupId}/permission:
    patch:
      tags:
        - Group
      summary: update group's permission, group owner only.
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:          
            $ref: '#/components/schemas/groupPermission'
      responses:
        '201': 
          description: Accepted
        '403':
          description: Forbidden

  /groups/{groupId}/folders:
    post:
      tags:
        - GroupFolder
      summary: link a folder to current group [not implement for now]
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/groupFolder'
      responses:
        '201':
          description: Linked
    get:
      tags:
        - GroupFolder
      summary: get all linked folders of current group
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/groupFolder'
  /groups/{groupId}/members:
    get:
      tags:
        - GroupMember
      summary: get group members
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: skip
          in: query
          required: false
          schema:
            type: number
        - name: top
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:  
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupMember'
  /groups/{groupId}/members/{memberId}/permission:
    patch:
      tags:
        - GroupMember
      summary: update member's permission, group owner only.
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        application/json:
          schema:
            $ref: '#/components/schemas/groupPermission'
      responses:
        '201': 
          description: Accepted
        '403':
          description: Forbidden
   



components:
  schemas:
    group:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
            type: string
        thumbnail:
            type: string
        type:
            $ref: '#/components/schemas/groupType'
        permission:
            $ref: '#/components/schemas/groupPermission'
        members:
          type: array
          items:
            $ref: '#/components/schemas/groupMember'
        folders:
          type: array
          items:
            $ref: '#/components/schemas/groupFolder'
    groupFolder:
      type: object
      properties:
        path:
          type: string
    groupMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
        avatar:
          type: string
        permission:
          $ref: '#/components/schemas/groupPermission'
    groupPermission:
      type: object
      properties:
        all:
          $ref: '#/components/schemas/permission'
    guid:
      type: string
      format: uuid
    permission:
      type: string
      enum: [None,Read,Write,ReadWrite]
    groupType:
      type: string
      enum: [WorkGroup,ShareGroup]
  requestBodies:
    group:
      description: postbody to create a group
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              displayName:
                type: string
              thumbnail:
                type: string
              type:
                $ref: '#/components/schemas/groupType'
              permission:
                $ref: '#/components/schemas/groupPermission'
              folders:
                type: array
                items:
                  $ref: '#/components/schemas/groupFolder'
    groupFolder:
      description: postbody to link a folder to group
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupFolder'